{"version":3,"sources":["webpack://dilu-react/webpack/universalModuleDefinition","webpack://dilu-react/webpack/bootstrap","webpack://dilu-react/./node_modules/maishu-dilu/out/formValidator.js","webpack://dilu-react/./out/value-validator.js","webpack://dilu-react/external \"react\"","webpack://dilu-react/./out/form-validator.js","webpack://dilu-react/./out/index.js","webpack://dilu-react/./node_modules/maishu-dilu/out/index.js","webpack://dilu-react/./node_modules/maishu-dilu/out/errors.js","webpack://dilu-react/./node_modules/maishu-dilu/out/rules.js","webpack://dilu-react/./node_modules/maishu-dilu/out/style.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","FormValidator","errors_1","form","fields","validateOnChanged","errors","argumentNull","elementEvents","field","push","map","errorElement","filter","forEach","style","display","fieldErrorElement","error","removeProperty","innerHTML","element","querySelectorAll","elementNotExists","getElementsByClassName","errorClassName","fieldElement","document","createElement","className","nextSibling","parentElement","insertBefore","appendChild","ps","Array","length","condition","checkField","checkFieldAsync","all","isAsync","validateFunc","checking","catch","addEventListener","elementType","type","elements","bindElementEvent","depends","j","dependResult","Error","rules","rule","fieldElementCanntNull","elementValue","isPass","validate","showElement","console","assert","elementName","errorText","replace","tagName","inputElement","checked","FieldValidator","React","form_validator_1","Component","props","super","_validateUndefineValue","state","prevState","errorMessage","checkValue","setState","undefined","value_validator_1","_fieldValidators","conditionOrName","ref","indexOf","validateUndefineValue","check","maishu_dilu_1","formValidator_1","rules_1","parameterName","msg","fieldIndex","fieldResultExpectBooleanType","numericRegex","decimalRegex","emailRegex","ipRegex","urlRegex","mobileRegex","dateRegex","msgs","createValidation","calc","elementValueCompare","otherValue","test","parseFloat","date","match","validDateArray","validDate","Date","split","setFullYear","setMonth","setDate","getValidDate","required","matches","otherElement","email","minLength","maxLength","greaterThan","lessThan","equal","ip","url","mobile","numeric","custom","getElementById","head","id"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dilu-react\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"dilu-react\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormValidator = void 0;\r\nconst errors_1 = require(\"./errors\");\r\n/**\r\n * 表单验证器，用于对表单中的字段进行验证\r\n */\r\nclass FormValidator {\r\n    constructor(form, ...fields) {\r\n        /** 输入框的值发生改变，是否重新校验该输入框的值，默认为 true */\r\n        this.validateOnChanged = true;\r\n        if (!form)\r\n            throw errors_1.errors.argumentNull('form');\r\n        this.fields = fields || [];\r\n        this.form = form;\r\n        this.elementEvents = {};\r\n    }\r\n    appendField(field) {\r\n        this.fields.push(field);\r\n    }\r\n    /**\r\n     * 清除表单的错误信息\r\n     */\r\n    clearErrors() {\r\n        this.fields.map(o => o.errorElement)\r\n            .filter(o => o != null)\r\n            .forEach(o => o.style.display = 'none');\r\n    }\r\n    /**\r\n     * 清除表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     */\r\n    clearElementError(name) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 设置表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     * @param error 错误信息\r\n     */\r\n    setElementError(name, error) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        if (!error)\r\n            throw errors_1.errors.argumentNull('error');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.removeProperty('display');\r\n            errorElement.innerHTML = error;\r\n        }\r\n    }\r\n    fieldElement(field) {\r\n        let name = field.name;\r\n        let element = this.form.querySelectorAll(`[name='${name}']`)[0];\r\n        if (element == null)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return element;\r\n    }\r\n    fieldErrorElement(field) {\r\n        if (!field.errorElement) {\r\n            let errorElement = this.form.getElementsByClassName(`${FormValidator.errorClassName} ${field.name}`)[0];\r\n            if (!errorElement) {\r\n                let element = this.fieldElement(field);\r\n                errorElement = document.createElement(\"span\");\r\n                errorElement.className = FormValidator.errorClassName;\r\n                errorElement.style.display = 'none';\r\n                if (element.nextSibling)\r\n                    element.parentElement.insertBefore(errorElement, element.nextSibling);\r\n                else\r\n                    element.parentElement.appendChild(errorElement);\r\n            }\r\n            field.errorElement = errorElement;\r\n        }\r\n        return field.errorElement;\r\n        // return errorElement;\r\n    }\r\n    /**\r\n     * 验证字段\r\n     */\r\n    check() {\r\n        let ps = new Array();\r\n        for (let i = 0; i < this.fields.length; i++) {\r\n            let field = this.fields[i];\r\n            let element = this.fieldElement(field);\r\n            if (field.condition && field.condition(element, this.form, this) == false)\r\n                continue;\r\n            let p = this.checkField(field);\r\n            ps.push(p);\r\n        }\r\n        let result = ps.filter(o => o == false).length == 0;\r\n        return result;\r\n    }\r\n    /**\r\n     * 异步验证字段\r\n     */\r\n    checkAsync() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ps = new Array();\r\n            for (let i = 0; i < this.fields.length; i++) {\r\n                let field = this.fields[i];\r\n                let element = this.fieldElement(field);\r\n                if (field.condition && field.condition(element, this.form, this) == false)\r\n                    continue;\r\n                let p = this.checkFieldAsync(field);\r\n                ps.push(p);\r\n            }\r\n            let checkResults = yield Promise.all(ps);\r\n            let result = checkResults.filter(o => o == false).length == 0;\r\n            return result;\r\n        });\r\n    }\r\n    bindElementEvent(field, isAsync) {\r\n        if (this.elementEvents[field.name]) {\r\n            return;\r\n        }\r\n        let element = this.fieldElement(field);\r\n        let validateFunc = (() => {\r\n            let checking = false;\r\n            return () => {\r\n                if (checking)\r\n                    return;\r\n                checking = true;\r\n                // isAsync ? this.checkFieldAsync(field) : this.checkField(field);\r\n                if (isAsync) {\r\n                    this.checkFieldAsync(field)\r\n                        .then(() => checking = false)\r\n                        .catch(() => checking = false);\r\n                }\r\n                else {\r\n                    this.checkField(field);\r\n                    checking = false;\r\n                }\r\n            };\r\n        })();\r\n        if (this.validateOnChanged) {\r\n            element.addEventListener('change', validateFunc);\r\n            let elementType = element.type || \"text\";\r\n            if (elementType == \"text\" || elementType == \"password\") {\r\n                element.addEventListener('keyup', validateFunc);\r\n            }\r\n            else if (elementType == \"radio\") {\r\n                let name = element.name;\r\n                let elements = this.form.querySelectorAll(`[name='${name}']`);\r\n                for (let i = 0; i < elements.length; i++) {\r\n                    if (elements[i] == element) {\r\n                        continue;\r\n                    }\r\n                    elements[i].addEventListener(\"change\", validateFunc);\r\n                }\r\n            }\r\n        }\r\n        this.elementEvents[field.name] = true;\r\n    }\r\n    checkField(field) {\r\n        this.bindElementEvent(field, false);\r\n        let element = this.fieldElement(field);\r\n        let depends = field.depends || [];\r\n        for (let j = 0; j < depends.length; j++) {\r\n            let dependResult = depends[j](element);\r\n            if (typeof dependResult == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            let dependIsOK = dependResult;\r\n            if (!dependIsOK)\r\n                return false;\r\n        }\r\n        for (let j = 0; j < field.rules.length; j++) {\r\n            let rule = field.rules[j];\r\n            let element = this.fieldElement(field);\r\n            if (element == null)\r\n                throw errors_1.errors.fieldElementCanntNull();\r\n            let value = this.elementValue(element);\r\n            let isPass = rule.validate(value);\r\n            if (typeof isPass == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            this.showElement(!isPass, field, rule, element);\r\n            if (!isPass)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    checkFieldAsync(field) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.bindElementEvent(field, true);\r\n            let element = this.fieldElement(field);\r\n            let depends = field.depends || [];\r\n            for (let j = 0; j < depends.length; j++) {\r\n                let dependResult = depends[j](element);\r\n                if (typeof dependResult == 'boolean') {\r\n                    dependResult = Promise.resolve(dependResult);\r\n                }\r\n                let dependIsOK = yield dependResult;\r\n                if (!dependIsOK)\r\n                    return false;\r\n            }\r\n            for (let j = 0; j < field.rules.length; j++) {\r\n                let rule = field.rules[j];\r\n                let element = this.fieldElement(field);\r\n                if (element == null)\r\n                    throw errors_1.errors.fieldElementCanntNull();\r\n                let value = this.elementValue(element);\r\n                let p = rule.validate(value);\r\n                if (typeof p == 'boolean') {\r\n                    p = Promise.resolve(p);\r\n                }\r\n                let isPass = yield p;\r\n                this.showElement(!isPass, field, rule, element);\r\n                if (!isPass)\r\n                    return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    showElement(display, field, rule, element) {\r\n        let errorElement = this.fieldErrorElement(field);\r\n        console.assert(errorElement != null, 'errorElement cannt be null.');\r\n        if (rule.error != null) {\r\n            errorElement = field.errorElement;\r\n            let name = this.elementName(element);\r\n            let errorText = typeof rule.error == 'string' ? rule.error : rule.error() || '';\r\n            errorElement.innerHTML = errorText.replace('%s', name);\r\n        }\r\n        if (display) {\r\n            errorElement.style.removeProperty('display');\r\n        }\r\n        else {\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 异步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElementAsync(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkFieldAsync(field);\r\n    }\r\n    /**\r\n     * 同步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElement(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkField(field);\r\n    }\r\n    elementValue(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.value;\r\n        }\r\n        let inputElement = element;\r\n        if (inputElement.type == \"radio\") {\r\n            let elements = this.form.querySelectorAll(`[name='${inputElement.name}']`);\r\n            for (let i = 0; i < elements.length; i++) {\r\n                if (elements[i].checked) {\r\n                    return elements[i].value;\r\n                }\r\n            }\r\n            return \"\";\r\n        }\r\n        return element.value;\r\n    }\r\n    elementName(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.name;\r\n        }\r\n        return element.name;\r\n    }\r\n}\r\nexports.FormValidator = FormValidator;\r\nFormValidator.errorClassName = 'validationMessage';\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FieldValidator = void 0;\r\nconst React = require(\"react\");\r\nconst form_validator_1 = require(\"./form-validator\");\r\nclass FieldValidator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._validateUndefineValue = false;\r\n        this.state = { value: props.value };\r\n    }\r\n    static getDerivedStateFromProps(props, prevState) {\r\n        let errorMessage = prevState.errorMessage;\r\n        if (errorMessage) {\r\n            errorMessage = FieldValidator.checkValue(props);\r\n        }\r\n        return { value: props.value, errorMessage };\r\n    }\r\n    check() {\r\n        let errorMessage = FieldValidator.checkValue(this.props);\r\n        this.setState({ errorMessage });\r\n        return errorMessage == undefined;\r\n    }\r\n    get validateUndefineValue() {\r\n        return this._validateUndefineValue;\r\n    }\r\n    set validateUndefineValue(value) {\r\n        this._validateUndefineValue = value;\r\n    }\r\n    static checkValue(props) {\r\n        let { value, rules } = props;\r\n        if (props.condition != null && props.condition() == false) {\r\n            // this.setState({ errorMessage: \"\" })\r\n            // return true;\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < rules.length; i++) {\r\n            var r = rules[i].validate(value);\r\n            if (r === false) {\r\n                let error = rules[i].error;\r\n                let errorMessage;\r\n                if (typeof error == \"string\") {\r\n                    errorMessage = error;\r\n                }\r\n                else if (typeof error == \"function\") {\r\n                    errorMessage = error();\r\n                }\r\n                else {\r\n                    errorMessage = \"Unknonw Error\";\r\n                }\r\n                // this.setState({ errorMessage })\r\n                return errorMessage;\r\n            }\r\n            else if (r === true) {\r\n                // this.setState({ errorMessage: \"\" })\r\n                return undefined;\r\n            }\r\n            else {\r\n                throw new Error('Please use checkValueAsync method.');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    // private validateValue(props: FieldValidatorProps) {\r\n    //     let { value, rules } = props;\r\n    //     if (value === undefined && this.validateUndefineValue == false) {\r\n    //         this.setState({ errorMessage: \"\" })\r\n    //         return;\r\n    //     }\r\n    //     this.checkValue(props);\r\n    // }\r\n    // componentDidMount() {\r\n    //     this.validateValue(this.props);\r\n    // }\r\n    render() {\r\n        let { errorMessage } = this.state || {};\r\n        return React.createElement(\"span\", { className: this.props.errorClassName || form_validator_1.FormValidator.errorClassName, style: { display: errorMessage ? \"block\" : \"none\" } }, errorMessage);\r\n    }\r\n}\r\nexports.FieldValidator = FieldValidator;\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormValidator = void 0;\r\nconst React = require(\"react\");\r\nconst value_validator_1 = require(\"./value-validator\");\r\nclass FormValidator {\r\n    constructor() {\r\n        this._fieldValidators = [];\r\n    }\r\n    get fieldValidators() {\r\n        return this._fieldValidators;\r\n    }\r\n    field(value, rules, conditionOrName, name) {\r\n        let condition;\r\n        if (typeof conditionOrName == \"function\") {\r\n            condition = conditionOrName;\r\n        }\r\n        else if (typeof conditionOrName == \"string\") {\r\n            name = conditionOrName;\r\n        }\r\n        return React.createElement(value_validator_1.FieldValidator, { value: value, rules: rules, name: name, condition: condition, ref: e => {\r\n                if (e == null || this._fieldValidators.indexOf(e) >= 0)\r\n                    return;\r\n                this._fieldValidators.push(e);\r\n            } });\r\n    }\r\n    check() {\r\n        let r = true;\r\n        this._fieldValidators.forEach(c => {\r\n            c.validateUndefineValue = true;\r\n            if (c.check() == false) {\r\n                console.error(c.state.errorMessage);\r\n                r = false;\r\n            }\r\n        });\r\n        return r;\r\n    }\r\n    clearErrors() {\r\n        this._fieldValidators.forEach(c => {\r\n            c.setState({ errorMessage: \"\" });\r\n        });\r\n    }\r\n}\r\nexports.FormValidator = FormValidator;\r\nFormValidator.errorClassName = \"validationMessage\";\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.FormValidator = exports.FieldValidator = exports.rules = void 0;\r\nvar maishu_dilu_1 = require(\"maishu-dilu\");\r\nObject.defineProperty(exports, \"rules\", { enumerable: true, get: function () { return maishu_dilu_1.rules; } });\r\nvar value_validator_1 = require(\"./value-validator\");\r\nObject.defineProperty(exports, \"FieldValidator\", { enumerable: true, get: function () { return value_validator_1.FieldValidator; } });\r\nvar form_validator_1 = require(\"./form-validator\");\r\nObject.defineProperty(exports, \"FormValidator\", { enumerable: true, get: function () { return form_validator_1.FormValidator; } });\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rules = exports.FormValidator = void 0;\r\nvar formValidator_1 = require(\"./formValidator\");\r\nObject.defineProperty(exports, \"FormValidator\", { enumerable: true, get: function () { return formValidator_1.FormValidator; } });\r\nvar rules_1 = require(\"./rules\");\r\nObject.defineProperty(exports, \"rules\", { enumerable: true, get: function () { return rules_1.rules; } });\r\nrequire(\"./style\");\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.errors = void 0;\r\n// namespace dilu {\r\nexports.errors = {\r\n    argumentNull(parameterName) {\r\n        let msg = `Parameter ${parameterName} can not be null or empty.`;\r\n        return new Error(msg);\r\n    },\r\n    elementValidateRuleNotSet(element) {\r\n        let msg = `元素'${element.name}'没有设置验证规则`;\r\n        return new Error(msg);\r\n    },\r\n    fieldElementCanntNull(fieldIndex) {\r\n        // if (fieldIndex != null)\r\n        let msg = fieldIndex != null ?\r\n            `The element value in the field cannt be null, field index is ${fieldIndex}.` :\r\n            `The element in the field is null`;\r\n        return new Error(msg);\r\n    },\r\n    elementNotExists(name) {\r\n        let msg = `Element ${name} is not exits in the form.`;\r\n        return new Error(msg);\r\n    },\r\n    fieldResultExpectBooleanType(name) {\r\n        let msg = `Result of ${name} field is expected boolean.`;\r\n        return new Error(msg);\r\n    }\r\n};\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rules = void 0;\r\n// namespace dilu {\r\nvar ruleRegex = /^(.+?)\\[(.+)\\]$/, numericRegex = /^[0-9]+$/, integerRegex = /^\\-?[0-9]+$/, decimalRegex = /^\\-?[0-9]*\\.?[0-9]+$/, emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/, alphaRegex = /^[a-z]+$/i, alphaNumericRegex = /^[a-z0-9]+$/i, alphaDashRegex = /^[a-z0-9_\\-]+$/i, naturalRegex = /^[0-9]+$/i, naturalNoZeroRegex = /^[1-9][0-9]*$/i, ipRegex = /^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/i, base64Regex = /[^a-zA-Z0-9\\/\\+=]/i, numericDashRegex = /^[\\d\\-\\s]+$/, urlRegex = /^((http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)|)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/, mobileRegex = /^1[34578]\\d{9}$/, dateRegex = /\\d{4}-\\d{1,2}-\\d{1,2}/;\r\nlet msgs = {\r\n    required: '%s不能为空',\r\n    matches: '%s与%s不匹配',\r\n    \"default\": 'The %s field is still set to default, please change.',\r\n    equal: '%s和%s必须相同',\r\n    email: '不是有效的邮箱地址',\r\n    valid_emails: 'The %s field must contain all valid email addresses.',\r\n    minLength: '%s至少包含%s个字符',\r\n    maxLength: '%s不能超过%s字符',\r\n    exact_length: 'The %s field must be exactly %s characters in length.',\r\n    greater_than: 'The %s field must contain a number greater than %s.',\r\n    less_than: 'The %s field must contain a number less than %s.',\r\n    alpha: 'The %s field must only contain alphabetical characters.',\r\n    alpha_numeric: 'The %s field must only contain alpha-numeric characters.',\r\n    alpha_dash: 'The %s field must only contain alpha-numeric characters, underscores, and dashes.',\r\n    numeric: '请数入数字',\r\n    integer: 'The %s field must contain an integer.',\r\n    decimal: 'The %s field must contain a decimal number.',\r\n    is_natural: 'The %s field must contain only positive numbers.',\r\n    is_natural_no_zero: 'The %s field must contain a number greater than zero.',\r\n    ip: 'The %s field must contain a valid IP.',\r\n    valid_base64: 'The %s field must contain a base64 string.',\r\n    valid_credit_card: 'The %s field must contain a valid credit card number.',\r\n    is_file_type: 'The %s field must contain only %s files.',\r\n    valid_url: 'The %s field must contain a valid URL.',\r\n    greater_than_date: 'The %s field must contain a more recent date than %s.',\r\n    less_than_date: 'The %s field must contain an older date than %s.',\r\n    greater_than_or_equal_date: 'The %s field must contain a date that\\'s at least as recent as %s.',\r\n    less_than_or_equal_date: 'The %s field must contain a date that\\'s %s or older.',\r\n    mobile: '请输入正确的手机号码',\r\n    custom: '请输入正确制',\r\n};\r\nfunction createValidation(validate, error) {\r\n    return {\r\n        validate: validate,\r\n        error: error\r\n    };\r\n}\r\nfunction calc(value) {\r\n    if (typeof value == 'function') {\r\n        return value();\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * 表单验证规则\r\n */\r\nexports.rules = {\r\n    /**\r\n     * 验证必填字段\r\n     * @param error 错误提示文字\r\n     */\r\n    required(error) {\r\n        let validate = (value) => (value || \"\") != '';\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证两个字段值是否相等\r\n     * @param otherElement 另外一个字段\r\n     * @param error 错误提示文字\r\n     */\r\n    matches(otherElement, error) {\r\n        var validate = (value) => value == otherElement.value;\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证邮箱\r\n     * @param error 错误提示文字\r\n     */\r\n    email(error) {\r\n        var validate = (value) => emailRegex.test(value);\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证字段最小长度\r\n     * @param length 最小长度\r\n     * @param error 错误提示文字\r\n     */\r\n    minLength(length, error) {\r\n        var validate = (value) => (value || '').length >= calc(length);\r\n        return createValidation(validate, error || msgs.minLength);\r\n    },\r\n    /**\r\n     * 验证字段的最大长度\r\n     * @param length 最大长度\r\n     * @param error 错误提示文字\r\n     */\r\n    maxLength(length, error) {\r\n        var validate = (value) => (value || '').length <= calc(length);\r\n        return createValidation(validate, error || msgs.matches);\r\n    },\r\n    /**\r\n     * 验证字段大于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    greaterThan(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'greaterThan';\r\n        return createValidation(validate, error || msgs.greater_than);\r\n    },\r\n    /**\r\n     * 验证字段小于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    lessThan(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'lessThan';\r\n        return createValidation(validate, error || msgs.less_than);\r\n    },\r\n    /**\r\n     * 验证字段等于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    equal(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'equal';\r\n        return createValidation(validate, error || msgs.equal);\r\n    },\r\n    /**\r\n     * 验证字段为 IP\r\n     * @param error 错误提示文字\r\n     */\r\n    ip(error) {\r\n        var validate = (value) => ipRegex.test(value);\r\n        return createValidation(validate, error || msgs.ip);\r\n    },\r\n    /**\r\n     * 验证字段为 URL\r\n     * @param error 错误提示文字\r\n     */\r\n    url(error) {\r\n        var validate = (value) => urlRegex.test(value);\r\n        return createValidation(validate, error || msgs.valid_url);\r\n    },\r\n    /**\r\n     * 验证字段为手机号码\r\n     * @param error 错误提示文字\r\n     */\r\n    mobile(error) {\r\n        var validate = (value) => mobileRegex.test(value);\r\n        return createValidation(validate, error || msgs.mobile);\r\n    },\r\n    /**\r\n     * 验证字段为数字\r\n     * @param error 错误提示文字\r\n     */\r\n    numeric(error) {\r\n        var validate = (value) => numericRegex.test(value);\r\n        return createValidation(validate, error || msgs.numeric);\r\n    },\r\n    /**\r\n     * 自定义验证\r\n     * @param validate 自定义验证的方法\r\n     * @param error 错误提示文字\r\n     */\r\n    custom(validate, error) {\r\n        return createValidation(validate, error || msgs.custom);\r\n    }\r\n};\r\nfunction elementValueCompare(value, otherValue) {\r\n    let elementValue;\r\n    if (typeof otherValue == 'number') {\r\n        elementValue = decimalRegex.test(value) ? parseFloat(value) : null;\r\n    }\r\n    else if (typeof otherValue == 'string') {\r\n        elementValue = value;\r\n    }\r\n    else {\r\n        elementValue = getValidDate(value);\r\n    }\r\n    if (elementValue < otherValue)\r\n        return 'lessThan';\r\n    else if (elementValue > otherValue)\r\n        return 'greaterThan';\r\n    else\r\n        return 'equal';\r\n}\r\n/**\r\n * private function _getValidDate: helper function to convert a string date to a Date object\r\n * @param date (String) must be in format yyyy-mm-dd or use keyword: today\r\n * @returns {Date} returns false if invalid\r\n */\r\nfunction getValidDate(date) {\r\n    if (!date.match('today') && !date.match(dateRegex)) {\r\n        return null;\r\n    }\r\n    var validDate = new Date(), validDateArray;\r\n    if (!date.match('today')) {\r\n        validDateArray = date.split('-');\r\n        validDate.setFullYear(validDateArray[0]);\r\n        validDate.setMonth(validDateArray[1] - 1);\r\n        validDate.setDate(validDateArray[2]);\r\n    }\r\n    return validDate;\r\n}\r\n;\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst formValidator_1 = require(\"./formValidator\");\r\nlet elementId = \"maishu-dilu-style\";\r\nif (typeof document != \"undefined\") {\r\n    if (!document.getElementById(elementId) && document.head != null) {\r\n        let element = document.createElement('style');\r\n        element.type = 'text/css';\r\n        element.id = elementId;\r\n        document.head.appendChild(element);\r\n        element.innerHTML = `\r\n        .${formValidator_1.FormValidator.errorClassName} {\r\n            color: red;\r\n            font-weight: bold;\r\n        }\r\n        `;\r\n    }\r\n}\r\n"],"sourceRoot":""}